---
- name: Create CA
  hosts: servers

#  vars:
#    secret_ca_passphrase: "Th3!PassW0rD" # (required)
#    ca_path: "/certificates"             # (optional) - default is /certificates
#    cert_path: "/etc/ssl/"               # (optional) - default is /etc/ssl
#    ca_common_name: "Ansible CA"         # (optional) - default is "Ansible CA"
#    subject_alt_name:                   Â # (required)
#      - "DNS: test.techtalks.local"
#      - "DNS: test2.techtalks.local"
#      - "IP: 192.168.100.70"             # you can use also IP

  tasks:
    - name: Check we have all variables configured
      ansible.builtin.assert:
        that:
          - secret_ca_passphrase is defined
          - subject_alt_name is defined
        fail_msg: "Failed: Variable secret_ca_passphrase is not set."

    - name: Make sure python3-cryptography package is installed
      ansible.builtin.dnf:
        name: python3-cryptography
        state: latest

    - name: Create private key for new certificate
      community.crypto.openssl_privatekey:
        path: "{{ cert_pathca_path | default('/etc/ssl') }}/certificate.key"
      delegate_to: "{{ groups['servers'][0] }}"
      run_once: true

    - name: Create certificate signing request (CSR) for new certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ cert_pathca_path | default('/etc/ssl') }}/certificate.key"
        subject_alt_name:
          - "{{ subject_alt_name }}"
      delegate_to: "{{ groups['servers'][0] }}"
      run_once: true
      register: csr

    - name: Check whether certificate exists
      ansible.builtin.stat:
        path: "{{ cert_pathca_path | default('/etc/ssl') }}/certificate.pem"
      delegate_to: "{{ groups['servers'][0] }}"
      run_once: true
      register: certificate_exists

    - name: Read existing certificate if exists
      ansible.builtin.slurp:
        src: "{{ cert_pathca_path | default('/etc/ssl') }}/certificate.pem"
      when: certificate_exists.stat.exists
      delegate_to: "{{ groups['servers'][0] }}"
      run_once: true
      register: certificate

    - name: Sign certificate with our CA
      community.crypto.x509_certificate_pipe:
        content: "{{ (certificate.content | b64decode) if certificate_exists.stat.exists else omit }}"
        csr_content: "{{ csr.csr }}"
        provider: ownca
        ownca_path: "{{ ca_path | default('/certificates') }}/ca-certificate.pem"
        ownca_privatekey_path: "{{ ca_path | default('/certificates') }}/ca-certificate.key"
        ownca_privatekey_passphrase: "{{ secret_ca_passphrase }}"
        ownca_not_after: +365d  # valid for one year
        ownca_not_before: "-1d"  # valid since yesterday
      delegate_to: "{{ groups['ca'][0] }}"
      run_once: true
      register: certificate

    - name: Write certificate file on server_1
      ansible.builtin.copy:
        dest: "{{ cert_pathca_path | default('/etc/ssl') }}/certificate.pem"
        content: "{{ certificate.certificate }}"
      delegate_to: "{{ groups['servers'][0] }}"
      run_once: true
      when: certificate is changed